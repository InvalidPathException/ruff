class Any: ...

def final(f: _T) -> _T: ...

class TypeVar:
    def __new__(cls, name: str): ...

class _SpecialForm: ...

Generic: _SpecialForm
Protocol: _SpecialForm
ClassVar: _SpecialForm
Final: _SpecialForm
Literal: _SpecialForm
Callable: _SpecialForm

def runtime_checkable(cls: type) -> type: ...

@runtime_checkable
class SupportsIndex(Protocol):
    def __index__(self) -> int: ...

@runtime_checkable
class Sized(Protocol):
    def __len__(self) -> int: ...

def reveal_type(obj): ...

class NamedTuple: ...

def is_protocol(tp: type, /) -> bool: ...
def get_protocol_members(tp: type, /): ...
